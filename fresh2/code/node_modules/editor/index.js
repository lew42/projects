var Mod = require("mod42/v1a");
var View = require("view42/v1");
require("./editor.less");

var EditorView = View.extend({
	name: "EditorView",
	// log: true,
	clickOff: function(cb){
		document.documentElement.addEventListener("click", function(e){
			var parent = e.target;
			var inside = false; // assume we clicked outside
			while (parent){
				if (parent === this.el){
					inside = true; // click targeted an element w/in our .el
					parent = false;
					break;
				} else { 
					parent = parent.parentNode;
				}
			}

			if (!inside)
				cb.call(this);
			else
				console.log("clicked inside");
		}.bind(this));
	},
	render: function(){
		var self = this;
		// console.log(this.name);
		this.append(this.initialValue);

		this.el.addEventListener("click", function(){
			// console.log("ce: true");
			self.el.setAttribute("contenteditable", true);
			self.el.focus();
		});

		["focus", "click", "keydown", "keyup", "keypress", "change"].forEach(function(event){
			this.el.addEventListener(event, function(){
				// console.log(self.el.innerHTML);
				// console.log(event, arguments);
			}.bind(this));
		}.bind(this));

		["keydown", "keyup", "keypress"].forEach(function(event){
			document.body.addEventListener(event, function(){
				// console.log(event, arguments);
			});
		});

		this.el.addEventListener("keyup", function(){
			if (this.last !== this.el.innerHTML){
				// console.log("changed -->", this.el.innerHTML);
				this.editor.setValue(this.el.innerHTML);
				this.last = this.el.innerHTML;
			}
		}.bind(this));

		this.clickOff(function(){
			// console.log("clicked ouside");
			self.el.removeAttribute("contenteditable");
		});
	}
});

var Editor = module.exports = Mod.extend({
	name: "Editor",
	initialize: function(){
		this.render();
	},
	render: function(){
		this.view = new EditorView({
			editor: this,
			name: this.name + "View",
			initialValue: localStorage.getItem(this.name) || this.name
		});
	},
	setValue: function(value){
		localStorage.setItem(this.name, value);
	}
});