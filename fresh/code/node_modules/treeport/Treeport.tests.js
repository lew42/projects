// var Tests = require("test");
var docroot = require("docroot");
var Panels = require("./index");

var View = require("view42/v1");

// var Tests = module.exports = Treeport.Tests = Tests.extend({
// 	name: "TreeportTests",
// 	run: function(){

// 	}
// });

// Tests();
// debugger;
var panels = Panels({
	one: View("this is panel 1"),
	two: View("this is panel 2")
});

docroot.append(panels);

// var Threeport = Treeport.extend({
// 	name: "Threeport",
// 	list: function(){
// 		this.append({
// 			one: View("one"),
// 			two: View("two")
// 		})
// 	}
// });

// var Fourport = Threeport.extend({
// 	name: "Fourport",
// 	render: function(){
// 		this.append({
// 			one: "one",
// 			two: "two",
// 			three: "three"
// 		})
// 	}
// });

// // debugger;
// var test = View({
// 	one: View("auto appended?")
// });

// docroot.append({
// 	treeport: treeport,
// 	threeport: Threeport("threeport"),
// 	fourtyport: Fourport("fourport"),
// 	test: test
// });

// // this doesn't work - fourtyport.two is a text node, not a View
// // I could upgrade it to a TextNode wrapper, which let's .set to work
// // or upgrade .set to pass the value through...
// // docroot.set({
// // 	fourtyport: {
// // 		two: "new two"
// // 	}
// // });

// docroot.fourtyport.two.textContent = "new two";

// docroot.append(Fourport(".pepe", "stryingy"));
// docroot.pepe.el.textContent = "yeee";
// docroot.pepe.set("pee");
// docroot.set({
// 	pepe: "mepe"
// })